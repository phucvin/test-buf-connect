package main

import (
    "context"
    "fmt"
    "log"
    "net/http"

    "github.com/bufbuild/connect-go"
    "golang.org/x/net/http2"
    "golang.org/x/net/http2/h2c"
	"google.golang.org/protobuf/types/known/anypb"

    greetv1 "testbufconnect/gen/greet/v1" // generated by protoc-gen-go
    "testbufconnect/gen/greet/v1/greetv1connect" // generated by protoc-gen-connect-go
)

type ServiceServer struct{}

func (s *ServiceServer) Call(
    ctx context.Context,
    req *connect.Request[anypb.Any],
) (*connect.Response[anypb.Any], error) {
    log.Println("Request headers: ", req.Header())
	any, err := anypb.New(&greetv1.GreetResponse{
        Greeting: fmt.Sprintf("Hello, %s!", "TODO"),
    })
	if err != nil {
		return nil, err
	}
    res := connect.NewResponse(any)
    res.Header().Set("Greet-Version", "v1")
    return res, nil
}

func main() {
    server := &ServiceServer{}
    mux := http.NewServeMux()
    path, handler := greetv1connect.NewServiceHandler(server)
    mux.Handle(path, handler)
    http.ListenAndServe(
        "localhost:8080",
        // Use h2c so we can serve HTTP/2 without TLS.
        h2c.NewHandler(mux, &http2.Server{}),
    )
}